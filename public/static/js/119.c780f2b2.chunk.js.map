{"version":3,"file":"static/js/119.c780f2b2.chunk.js","mappings":"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","sources":["shared/components/FormElements/Button.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`} \n      type={props.type}\n      onClick={props.onClick}\n      // seems like disabled is standard HTML attribute, makes button appear grayed out \n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  \n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css'\r\n\r\nconst ModalOverlay = props => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n            <form onSubmit={\r\n                props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n            } >\r\n                <div className={`modal__content ${props.contentClass}`}>\r\n                    {props.children}\r\n                </div>\r\n                <footer className={`modal__footer ${props.footerClass}`}>\r\n                    {props.footer}\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    );\r\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n    return <React.Fragment>\r\n        {props.show && <Backdrop onClickProp={props.onCancel} />}\r\n        <CSSTransition \r\n            in={props.show}\r\n            mountOnEnter\r\n            unmountOnExit\r\n            timeout={200}\r\n            classNames='modal'>\r\n                <ModalOverlay {...props}/>\r\n        </CSSTransition>\r\n    </React.Fragment>\r\n};\r\n\r\nexport default Modal; ","// lecture 154\r\n\r\nimport { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n\r\n    // useRef, if page reloded before data is fetched \r\n    const activeHttpRequests = useRef([]);\r\n\r\n    const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setIsLoading(true);\r\n        const httpAbortCtrl = new AbortController();\r\n        activeHttpRequests.current.push(httpAbortCtrl);\r\n        try {\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers,\r\n                signal: httpAbortCtrl.signal\r\n            });\r\n    \r\n            const responseData = await response.json();\r\n\r\n            activeHttpRequests.current = activeHttpRequests.current.filter(\r\n                reqCtrl => reqCtrl !== httpAbortCtrl\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error(responseData.message);\r\n            }\r\n\r\n            setIsLoading(false);\r\n            return responseData;\r\n\r\n        } catch (err) {\r\n            setError(err.message);\r\n            setIsLoading(false);\r\n            throw err;\r\n        }\r\n        \r\n        \r\n    },[]);\r\n\r\n    const clearError = () => {\r\n        setError(null);\r\n    };\r\n\r\n    //useEffect for cleaning smth\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n        };\r\n    },[]);\r\n\r\n    return { isLoading, error, sendRequest, clearError};\r\n};","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport \"./UserItem.css\"\r\n\r\nconst UserItem = props => {\r\n    return (\r\n        <li className=\"user-item\">\r\n            <Card className=\"user-item__content\">\r\n                <Link to={`/${props.id}/places`}>\r\n                    <div className=\"user-item__image\">\r\n                        <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\r\n\r\n                    </div>\r\n                    <div className=\"user-item__info\">\r\n                        <h2>{props.name}</h2>\r\n                        <h3>{props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"} </h3>\r\n                    </div>\r\n                </Link>\r\n                </Card>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default UserItem; ","import React from \"react\";\r\n\r\nimport \"./UsersList.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\"\r\nimport UserItem from \"./UserItem\";\r\n\r\nconst UsersList = props => {\r\n    if (props.items.length === 0) {\r\n        return (\r\n            <div className=\"center\">\r\n                <Card>\r\n                    <h2>No Users Found.</h2>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ul className=\"users-list\">\r\n            {props.items.map(user => {\r\n                return <UserItem\r\n                    key={user.id}\r\n                    id={user.id}\r\n                    image={user.image}\r\n                    name={user.name}\r\n                    placeCount={user.places.length} />;\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default UsersList;\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport UserList from \"../components/UsersList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\n\r\nconst Users = () => {\r\n\r\n    // const USERS = [\r\n    //     {id: 'u1', \r\n    //     name: \"Bobby Brown\", \r\n    //     image:\"https://images.unsplash.com/photo-1494961104209-3c223057bd26?q=80&w=2602&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\", \r\n    //     places: 3\r\n    // }\r\n    // ];\r\n\r\n    //moved to http-hooks.js\r\n    // const [isLoading, setIsLoading] = useState(false);\r\n    // const [error, setError] = useState();\r\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\r\n    const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n    //lecture 153\r\n    useEffect(() => {\r\n\r\n\r\n\r\n        const fetchUsers = async () => {\r\n            \r\n            try {\r\n                const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL+'/users');\r\n                 //moved to http-hooks.js\r\n                // const responseData = await response.json();\r\n\r\n                // if (!response.ok) {\r\n                //     throw new Error(responseData.message);\r\n                // }\r\n                setLoadedUsers(responseData.users);\r\n            } catch (err) {\r\n                // setError(err.message);\r\n            };\r\n   \r\n\r\n        };\r\n        fetchUsers();\r\n\r\n    }, [sendRequest]);\r\n\r\n    // const errorHandler = () => {\r\n    //     setError(null);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && (\r\n                <div className=\"center\">\r\n                    <LoadingSpinner />\r\n                </div>\r\n            )}\r\n            {!isLoading && loadedUsers && <UserList items={loadedUsers} />}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Users; "],"names":["props","href","_jsx","className","size","inverse","danger","children","to","Link","exact","type","onClick","disabled","style","Modal","onCancel","onClear","header","show","error","footer","Button","ModalOverlay","content","_jsxs","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","React","Backdrop","onClickProp","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","isLoading","setIsLoading","useState","setError","activeHttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortCtrl","abort","clearError","src","image","alt","width","height","Card","id","Avatar","name","placeCount","items","map","user","UserItem","places","Users","loadedUsers","setLoadedUsers","process","users","fetchUsers","_Fragment","ErrorModal","LoadingSpinner","UserList"],"sourceRoot":""}