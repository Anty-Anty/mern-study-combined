{"version":3,"file":"static/js/830.eada2fbc.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.js","shared/components/FormElements/Button.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MIN, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport {AuthContext} from '../../shared/context/auth-context';\r\nimport './PlaceForm.css';\r\n\r\n// const DUMMY_PLACES = [\r\n//     {\r\n//         id: 'p1',\r\n//         title: 'Empire State Building',\r\n//         description: 'One of the most famous skyscrapers in the world',\r\n//         imageUrl: 'https://www.travelguide.net/media/1440x960/Empire-State-Building-1440x960.avif',\r\n//         adress: 'New York',\r\n//         location: {\r\n//             lat: 40.7484405,\r\n//             lag: -73.9882393\r\n//         },\r\n//         creator: 'u1'\r\n//     },\r\n//     {\r\n\r\n//         id: 'p2',\r\n//         title: 'Emp. State Building',\r\n//         description: 'One of the most famous skyscrapers in the world',\r\n//         imageUrl: 'https://www.travelguide.net/media/1440x960/Empire-State-Building-1440x960.avif',\r\n//         adress: 'New York',\r\n//         location: {\r\n//             lat: 40.7484405,\r\n//             lag: -73.9882393\r\n//         },\r\n//         creator: 'u2'\r\n//     }\r\n// ];\r\n\r\nconst UpdatePlace = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [loadedPlace, setLoadedPlace] = useState();\r\n\r\n    // const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const placeId = useParams().placeId;\r\n    const history = useHistory();\r\n\r\n    // const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\r\n\r\n    const [formState, inputHandler, setFormData] = useForm({\r\n        // lecture 70 dummy data to initialise\r\n        title: {\r\n            // value: identifiedPlace.title,\r\n            // isValid: true\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        description: {\r\n            // value: identifiedPlace.description,\r\n            // isValid: true\r\n            value: '',\r\n            isValid: false\r\n        }\r\n    }, false)\r\n\r\n    //lect 159 fetching place\r\n    useEffect(() => {\r\n        const fetchPlace = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\r\n                );\r\n                setLoadedPlace(responseData.place);\r\n                setFormData({\r\n                    title: {\r\n                        value: responseData.title,\r\n                        isValid: true\r\n                    },\r\n                    description: {\r\n                        value: responseData.description,\r\n                        isValid: true\r\n                    }\r\n                }, true);\r\n            } catch (err) { };\r\n        };\r\n        fetchPlace()\r\n    }, [sendRequest, placeId, setFormData]);\r\n\r\n    // lecture 70 adding function to deal with posible delay in requesting information from database\r\n    // useEffect(() => {\r\n    //     if (identifiedPlace) {\r\n    //         setFormData({\r\n    //             title: {\r\n    //                 value: identifiedPlace.title,\r\n    //                 isValid: true\r\n    //             },\r\n    //             description: {\r\n    //                 value: identifiedPlace.description,\r\n    //                 isValid: true\r\n    //             }\r\n    //         }, true);\r\n    //     };\r\n    //     setIsLoading(false);\r\n    // }, [setFormData, identifiedPlace])\r\n\r\n    //lect 159 updating place\r\n    const placeUpdateSubmitHandler = async event => {\r\n        event.preventDefault();\r\n        try{\r\n            await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`, 'PATCH', JSON.stringify({\r\n            title: formState.inputs.title.value,\r\n            description: formState.inputs.description.value\r\n        }), \r\n        {\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer ' + auth.token\r\n            \r\n        }\r\n        );\r\n        history.push('/' + auth.userId + '/places' )\r\n        } catch (err) {}\r\n        \r\n    };\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"center\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // if (!identifiedPlace) {\r\n    if (!loadedPlace && !error) {\r\n        return (\r\n            <div className=\"center\">\r\n                <Card><h2>Could not find place!</h2></Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {!isLoading && loadedPlace && <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n                <Input\r\n                    id='title'\r\n                    element='input'\r\n                    type='text'\r\n                    label='Title'\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid title.\"\r\n                    onInput={inputHandler}\r\n                    // 'inputs' is a name of array in useForm\r\n                    initialValue={loadedPlace.title}\r\n                    initialValid={true}\r\n                />\r\n                <Input\r\n                    id='description'\r\n                    element='textarea'\r\n                    label='Description'\r\n                    validators={[VALIDATOR_MINLENGTH(5)]}\r\n                    errorText=\"Please enter a valid discription (min 5 characters).\"\r\n                    onInput={inputHandler}\r\n                    initialValue={loadedPlace.description}\r\n                    initialValid={true}\r\n                />\r\n                <Button type='submit' disabled={!formState.isValid}>UPDATE PLACE</Button>\r\n            </form>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UpdatePlace;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`} \n      type={props.type}\n      onClick={props.onClick}\n      // seems like disabled is standard HTML attribute, makes button appear grayed out \n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport './Input.css'\r\n\r\n// the inputReducer function is part of useReducer and outside of compounent because it doesn't \r\n// depend on any compounent input\r\n\r\n// action is an object that describes the type of change to be made and includes any relevant \r\n// data for the update. action object is declared in dispatch function\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                // validation happens here. input value is chacked against specified in props validator type (e.g.VALIDATOR_REQUIRE())\r\n                isValid: validate(action.val, action.validators)\r\n            };\r\n        case 'TOUCH':\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nconst Input = props => {\r\n\r\n    // useReducer:\r\n    const [inputState, dispatch] = useReducer(inputReducer, { \r\n        //initial value is provided with props, if not then empty string\r\n        value: props.initialValue || '', \r\n        isTouched: false,\r\n        // isValid would be false for NewPlace.js and it would have prop for UpdatePlace.js\r\n        isValid: props.initialValid || false \r\n    });\r\n\r\n    // lesson 63: adding useEffect\r\n\r\n    // deconstruct object and get values to use them as dependencies in useEffect\r\n    // deconstruction is needed because we don't want to track all props, but only sertain parameters\r\n    const { id, onInput } = props;\r\n    const { value, isValid } = inputState; \r\n\r\n    useEffect(() => {\r\n        // onInput forwards input by user informatopn to NewPlace.js \r\n        onInput (id, value, isValid)\r\n    }, [id, value, isValid, onInput]);\r\n\r\n    // end 63\r\n\r\n    // functions changeHandler and touchHandler are part of useReducer, each of them trigered when input happens\r\n    const changeHandler = event => {\r\n        dispatch({\r\n            type: 'CHANGE',\r\n            val: event.target.value,\r\n            validators: props.validators\r\n        });\r\n    };\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: 'TOUCH'\r\n        })\r\n    };\r\n\r\n    // FIRST. element constant give us a choice between input or textarea\r\n    const element = props.element === 'input' ? (\r\n        <input\r\n            id={props.id}\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value}\r\n        />\r\n    ) : (\r\n        <textarea\r\n            id={props.id}\r\n            rows={props.rows || 3}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n            <label htmlFor={props.id}>{props.label}</label>\r\n            {element}\r\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input; \r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  \n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css'\r\n\r\nconst ModalOverlay = props => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n            <form onSubmit={\r\n                props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n            } >\r\n                <div className={`modal__content ${props.contentClass}`}>\r\n                    {props.children}\r\n                </div>\r\n                <footer className={`modal__footer ${props.footerClass}`}>\r\n                    {props.footer}\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    );\r\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n    return <React.Fragment>\r\n        {props.show && <Backdrop onClickProp={props.onCancel} />}\r\n        <CSSTransition \r\n            in={props.show}\r\n            mountOnEnter\r\n            unmountOnExit\r\n            timeout={200}\r\n            classNames='modal'>\r\n                <ModalOverlay {...props}/>\r\n        </CSSTransition>\r\n    </React.Fragment>\r\n};\r\n\r\nexport default Modal; ","// we keep here all useReducer logic which was set up in NewPlace initially.\r\n\r\nimport { useCallback, useReducer } from \"react\";\r\n\r\n// lecture 64 useReducer\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs) {\r\n                //authorisation (fix the issue of switching modes)\r\n                if(!state.inputs[inputId]){\r\n                    continue;\r\n                }\r\n                // if any \r\n                if (inputId === action.inputId) {\r\n                    // formIsValid(1) = formIsValid(2) && action.isValid . formIsValid(2) makes sure that action.isValid has the same value with formIsValid(1), therefore 'true'.\r\n                    //otherwise without formIsValid(2), would have been equal to action.isValid\r\n                    // later if inputs.isValid is true then formState.isValid is true and button stops been disabled\r\n                    formIsValid = formIsValid && action.isValid;\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\r\n                },\r\n                isValid: formIsValid\r\n            };\r\n// lecture 70 SET_DATA to udate dummy data in UpdatePlace.js after information recived from data base\r\n        case 'SET_DATA':\r\n            return {\r\n                // previous state is not copied, but replaced entirly\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    \r\n    // lesson 63, functions are passed to Input.js \r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    });\r\n\r\n     // useCallback with empty [] dependencies, means that when componenet function rerenders, \r\n    // this function is reused and not rerenders\r\n      // useCallback An empty array ([]) means the function will only be created once (on initial render).\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: 'INPUT_CHANGE',\r\n            value: value,\r\n            isValid: isValid,\r\n            inputId: id\r\n\r\n        });\r\n    }, []);\r\n\r\n    // lecture 70 adding function to deal with posible delay in requesting information from database\r\n    // useCallback An empty array ([]) means the function will only be created once (on initial render).\r\n    const setFormData = useCallback((inputData, formValidity)=>{\r\n        dispatch({\r\n            type:'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        })\r\n    },[]);\r\n\r\n    return [formState, inputHandler, setFormData]\r\n};","// lecture 154\r\n\r\nimport { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n\r\n    // useRef, if page reloded before data is fetched \r\n    const activeHttpRequests = useRef([]);\r\n\r\n    const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setIsLoading(true);\r\n        const httpAbortCtrl = new AbortController();\r\n        activeHttpRequests.current.push(httpAbortCtrl);\r\n        try {\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers,\r\n                signal: httpAbortCtrl.signal\r\n            });\r\n    \r\n            const responseData = await response.json();\r\n\r\n            activeHttpRequests.current = activeHttpRequests.current.filter(\r\n                reqCtrl => reqCtrl !== httpAbortCtrl\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error(responseData.message);\r\n            }\r\n\r\n            setIsLoading(false);\r\n            return responseData;\r\n\r\n        } catch (err) {\r\n            setError(err.message);\r\n            setIsLoading(false);\r\n            throw err;\r\n        }\r\n        \r\n        \r\n    },[]);\r\n\r\n    const clearError = () => {\r\n        setError(null);\r\n    };\r\n\r\n    //useEffect for cleaning smth\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n        };\r\n    },[]);\r\n\r\n    return { isLoading, error, sendRequest, clearError};\r\n};","// constants diclared in order for values to be reusable in part 1 and part 2\n\nconst VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\n// part 1 is called in parent component which calls reusable component (NewPlace - parant, Input - reusable etc.)\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\n// part 2 is called in reusable components like 'Input'\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["UpdatePlace","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","loadedPlace","setLoadedPlace","useState","placeId","useParams","history","useHistory","formState","inputHandler","setFormData","useForm","title","value","isValid","description","useEffect","async","responseData","place","err","fetchPlace","_jsx","className","children","LoadingSpinner","_jsxs","_Fragment","ErrorModal","onClear","onSubmit","event","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","Button","disabled","Card","props","href","size","inverse","danger","to","Link","exact","onClick","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","style","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","React","Backdrop","onClickProp","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","useRef","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","response","fetch","signal","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}